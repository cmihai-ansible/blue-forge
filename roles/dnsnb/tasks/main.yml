---
# tasks file for dnsnb
###########################################################################################################
## AWS Route53

- name: AWS - Create A Glue Records in AWS Route53
  community.aws.route53:
    aws_access_key: "{{ dnsnb_aws_access_key }}"
    aws_secret_key: "{{ dnsnb_aws_secret_key }}"
    state: present
    zone: "{{ dnsnb_persistent_zone }}"
    record: "{{ item.name }}.{{ dnsnb_persistent_zone }}"
    type: A
    ttl: 7200
    overwrite: yes
    value: "{{ item.ip }}"
  with_items: "{{ dnsnb_custom_nameservers }}"
  when: dnsnb_provider == "aws"

- name: AWS - Set flattened NS Fact
  set_fact:
    comp_name_servers: "{{ (comp_name_servers | default([])) + [item.name + '.' + dnsnb_persistent_zone] }}"
  with_items: "{{ dnsnb_custom_nameservers }}"
  when: dnsnb_provider == "aws"

- name: AWS - Create NS Records in AWS Route53
  community.aws.route53:
    aws_access_key: "{{ dnsnb_aws_access_key }}"
    aws_secret_key: "{{ dnsnb_aws_secret_key }}"
    state: present
    zone: "{{ dnsnb_persistent_zone }}"
    record: "{{ dnsnb_delegated_zone }}.{{ dnsnb_persistent_zone }}"
    type: NS
    ttl: 7200
    overwrite: yes
    value: "{{ comp_name_servers }}"
  when: dnsnb_provider == "aws"

###########################################################################################################
## DigitalOcean Domains - A Records

- name: DigitalOcean - Set flattened Results Fact base
  set_fact:
    check_do_a_records: "{{ (check_do_a_records | default([])) }}"
    check_do_a_record_ids: "{{ (check_do_a_record_ids | default([])) }}"
    check_do_ns_records: "{{ (check_do_ns_records | default([])) }}"
    check_do_ns_record_ids: "{{ (check_do_ns_record_ids | default([])) }}"
  when: dnsnb_provider == "digitalocean"

- name: DigitalOcean - Check for A Glue Records in DigitalOcean
  uri:
    url: "https://api.digitalocean.com/v2/domains/{{ dnsnb_persistent_zone }}/records?type=A&name={{ item.name + '.' + dnsnb_persistent_zone }}"
    method: GET
    headers:
      Authorization: "Bearer {{ dnsnb_do_pat }}"
      Accept: application/json
    status_code: [200, 201]
  register: curl_digitalocean_check_a_records
  with_items: "{{ dnsnb_custom_nameservers }}"
  when: dnsnb_provider == "digitalocean"

- name: DigitalOcean - Set flattened Results Fact
  set_fact:
    check_do_a_records: "{{ (check_do_a_records | default([])) + [item.json.domain_records[0].name] }}"
    check_do_a_record_ids: "{{ (check_do_a_record_ids | default([])) + [item.json.domain_records[0].id] }}"
  with_items: "{{ curl_digitalocean_check_a_records.results }}"
  when: dnsnb_provider == "digitalocean" and item.json.domain_records|length>0

- name: DigitalOcean - Delete A Records in DigitalOcean for good measure
  uri:
    url: "https://api.digitalocean.com/v2/domains/{{ dnsnb_persistent_zone }}/records/{{ item }}"
    method: DELETE
    headers:
      Authorization: "Bearer {{ dnsnb_do_pat }}"
      Accept: application/json
    status_code: [204]
  with_items: "{{ check_do_a_record_ids }}"
  when: dnsnb_provider == "digitalocean" and check_do_a_record_ids|length>0

- name: Pause for 3 seconds for the DO DNS API to catch up
  pause:
    seconds: 3
  when: dnsnb_provider == "digitalocean" and check_do_a_record_ids|length>0

- name: DigitalOcean - Create A Glue Records in DigitalOcean
  uri:
    url: "https://api.digitalocean.com/v2/domains/{{ dnsnb_persistent_zone }}/records"
    method: POST
    body_format: json
    body:
      type: A
      name: "{{ item.name }}"
      data: "{{ item.ip }}"
      ttl: 1800
    headers:
      Authorization: "Bearer {{ dnsnb_do_pat }}"
      Accept: application/json
    status_code: [200, 201]
  register: curl_digitalocean_ns_records
  with_items: "{{ dnsnb_custom_nameservers }}"
  when: dnsnb_provider == "digitalocean"

###########################################################################################################
## DigitalOcean Domains - NS Records

- name: DigitalOcean - Check for NS Records in DigitalOcean
  uri:
    url: "https://api.digitalocean.com/v2/domains/{{ dnsnb_persistent_zone }}/records?type=NS&name={{ dnsnb_delegated_zone + '.' + dnsnb_persistent_zone }}"
    method: GET
    headers:
      Authorization: "Bearer {{ dnsnb_do_pat }}"
      Accept: application/json
    status_code: [200, 201]
  register: curl_digitalocean_check_ns_records
  when: dnsnb_provider == "digitalocean"

- name: DigitalOcean - Set flattened Results Fact
  set_fact:
    check_do_ns_records: "{{ (check_do_ns_records | default([])) + [item.data] }}"
    check_do_ns_record_ids: "{{ (check_do_ns_record_ids | default([])) + [item.id] }}"
  with_items: "{{ curl_digitalocean_check_ns_records.json.domain_records }}"
  when: dnsnb_provider == "digitalocean" and curl_digitalocean_check_ns_records.json.domain_records|length>0

- name: DigitalOcean - Delete NS Records in DigitalOcean for good measure
  uri:
    url: "https://api.digitalocean.com/v2/domains/{{ dnsnb_persistent_zone }}/records/{{ item }}"
    method: DELETE
    headers:
      Authorization: "Bearer {{ dnsnb_do_pat }}"
      Accept: application/json
    status_code: [204]
  with_items: "{{ check_do_ns_record_ids }}"
  when: dnsnb_provider == "digitalocean" and check_do_ns_records|length>0

- name: Pause for 3 seconds for the DO DNS API to catch up
  pause:
    seconds: 3
  when: dnsnb_provider == "digitalocean" and check_do_ns_records|length>0

- name: DigitalOcean - Create NS Records in DigitalOcean
  uri:
    url: "https://api.digitalocean.com/v2/domains/{{ dnsnb_persistent_zone }}/records"
    method: POST
    body_format: json
    body:
      type: NS
      name: "{{ dnsnb_delegated_zone }}"
      data: "{{ item.name + '.' + dnsnb_persistent_zone }}."
      ttl: 1800
    headers:
      Authorization: "Bearer {{ dnsnb_do_pat }}"
      Accept: application/json
    status_code: [200, 201]
  register: curl_digitalocean_ns_records
  with_items: "{{ dnsnb_custom_nameservers }}"
  when: dnsnb_provider == "digitalocean"