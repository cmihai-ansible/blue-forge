---
- name: Create generation directory
  file:
    path: "{{ generation_directory }}"
    state: directory

- name: Install passlib locally
  pip:
    name: passlib
    state: present

- name: Generate Proctor Password Hash
  command: 'python3 -c ''import passlib.hash; print(passlib.hash.sha512_crypt.hash("{{ proctor_password }}"))'''
  register: generated_proctor_password_hash

- name: Generate Student Password Hash
  command: 'python3 -c ''import passlib.hash; print(passlib.hash.sha512_crypt.hash("{{ student_password }}"))'''
  register: generated_student_password_hash

#- name: Generate Proctor Password Hash
#  command: 'python -c ''import crypt;pw="{{ proctor_password }}";print(crypt.crypt(pw))'''
#  register: generated_proctor_password_hash
#
#- name: Generate Student Password Hash
#  command: 'python -c ''import crypt;pw="{{ student_password }}";print(crypt.crypt(pw))'''
#  register: generated_student_password_hash

- name: Retrieve image list
  ibm.cloudcollection.ibm_is_images_info:
    ibmcloud_api_key: "{{ ibmcloud_api_key }}"
  register: images_list

- name: Set VM image name/id dictionary fact
  set_fact:
    cacheable: True
    image_dict: "{{ images_list.resource.images |
      items2dict(key_name='name', value_name='id') }}"
