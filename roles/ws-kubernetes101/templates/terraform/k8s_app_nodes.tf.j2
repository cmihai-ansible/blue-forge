resource "ibm_is_instance" "{{ workshop_shortcode }}_{{ guid }}_student_{{ studentNum }}_app_{{ node_count }}_vsi" {
  depends_on = [ ibm_is_security_group.{{ workshop_shortcode }}_{{ guid }}_app_node_sg ]
  name    = "{{ workshop_shortcode }}-{{ guid }}-student-{{ studentNum }}-app-{{ node_count }}-vsi"
  image   = "{{ image_dict[student_vsi_image] }}"
  profile = "{{ student_vsi_application_node_profile }}"

  primary_network_interface {
    subnet = ibm_is_subnet.{{ workshop_shortcode }}_{{ guid }}_subnet.id
    security_groups = [ibm_is_security_group.{{ workshop_shortcode }}_{{ guid }}_app_node_sg.id]
  }

  vpc  = ibm_is_vpc.{{ workshop_shortcode }}_{{ guid }}_vpc.id
  zone = "{{ regional_zone }}"
  keys = [ibm_is_ssh_key.{{ workshop_shortcode }}_{{ guid }}_ssh_key.id]
  tags = [ "assetID:student-{{ studentNum }}-app-{{ node_count }}-vsi", "assetGroup:student-app-vsi", "assetType:vsi", "guid:{{ guid }}", "workshop:{{ workshop_id }}" ]

  boot_volume {
    name = "{{ workshop_shortcode }}-{{ guid }}-student-{{ studentNum }}-app-{{ node_count }}-bootvol"
  }

  user_data = "${file("./cloud_inits/student{{ studentNum }}-k8s_app_node-{{ node_count }}.yaml")}"
}