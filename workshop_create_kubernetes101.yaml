---
## This Playbook will deploy a Kubernetes Workshop environment with a single bastion node for the workshop proctor, X number of Control Plane Nodes and Y Number of Application Nodes with an optional Load Balancer Node for Z Number of Student Seats
- name: Deploy Kubernetes 101 Workshop
  hosts: localhost
  gather_facts: false
  collections:
    - community.crypto
    - community.general
    - ibm.cloudcollection

  tasks:
    - name: Provision Terraform locally
      include_role:
        name: localTerraform
      tags:
        - local_terraform

    - name: Build infrastructure
      include_role:
        name: ws-kubernetes101
        tasks_from: deploy_with_terraform
      vars:
        ibmcloud_api_key: "{{ ibmcloud_api_key }}"
    #    - name: Deploy DNS Nodes to support workshop
    #      include_role:
    #        name: createDNSNodes
    #      vars:
    #        ibmcloud_api_key: "{{ ibmcloud_api_key }}"
    - name: Template out Zones YAML file
      include_role:
        name: ws-kubernetes101
        tasks_from: template_zones_file
      tags:
        template_zones_yaml

    - name: Configure DNSNB
      include_role:
        name: dnsnb
      when: dnsnb_provider is defined
      tags:
        - dnsnb
      vars:
        dnsnb_persistent_zone: ibm.kemo.studio

- name: Connect to DNS VSIs and set base global configuration
  hosts: dns_vsi
  collections:
    - ansible.posix
  gather_facts: true
  tasks:
    - name: Configure DNS servers - FirewallD
      include_role:
        name: kenmoini.firewalld
      tags:
        - dns_configuration
        - firewalld
      vars:
        force_restart_of_firewalld: true
        firewalld_services:
          - ssh
          - cockpit
        firewalld_ports:
          - "53/tcp"
          - "53/udp"

    - name: Configure DNS servers - Cockpit
      include_role:
        name: kenmoini.cockpit
      tags:
        - dns_configuration
        - cockpit

    - name: Pull in zones variable
      include_vars:
        file: "{{ tfile_dir }}/zones.yaml"
      tags:
        - dns_configuration
        - zones_configuration

    - name: Configure DNS servers
      include_role:
        name: configureDNSNodes
      tags:
        - dns_configuration
        - dns_daemon_configuration

- name: Connect to new VSIs and set base global configuration
  hosts: ext_workshop_vsi
  collections:
    - ansible.posix
  gather_facts: true
  tasks:
    - name: Configure infrastructure basics
      include_role:
        name: ws-kubernetes101
        tasks_from: global_configuration
      tags:
        - global_configuration

    - name: Set up System DNS vars
      include_role:
        name: setSystemDNS
        tasks_from: template_system_dns_vars.yaml
      with_items: "{{ groups['dns_vsi'] }}"
      tags:
        - set_system_dns

    - name: Set system DNS to deployed servers
      include_role:
        name: setSystemDNS
      when: inventory_hostname not in groups.dns_vsi
      vars:
        system_search_domain: "{{ guid }}.{{ domain }}"
        system_dns_servers: "{{ system_dns_servers|default(default_system_dns_servers) }}"
      tags:
        - set_system_dns

- name: Set up Proctor Bastion
  hosts: pb_vsi
  gather_facts: true
  tasks:
    - name: Template over internal hosts to /etc/hosts.int
      lineinfile:
        dest: /etc/hosts.int
        regexp: "{{ hostvars[item]['ansible_internal_ip'] }}.*$"
        line: "{{ hostvars[item]['ansible_internal_ip'] }} {{ hostvars[item]['ansible_set_fqdn'] }} {{ hostvars[item]['ansible_set_hostname'] }}"
        state: present
        backup: yes
      tags: etc_hosts
      with_items: "{{ groups.internal_workshop_vsi }}"

    - name: Template over external hosts to /etc/hosts.ext
      lineinfile:
        dest: /etc/hosts.ext
        regexp: "{{ hostvars[item]['ansible_external_ip'] }}.*$"
        line: "{{ hostvars[item]['ansible_external_ip'] }} {{ hostvars[item]['ansible_set_fqdn'] }} {{ hostvars[item]['ansible_set_hostname'] }}"
        state: present
        backup: yes
      tags: etc_hosts
      with_items: "{{ groups.ext_workshop_vsi }}"

    - name: Create workshop assets directory
      file:
        path: /opt/workshop_assets
        state: directory

    - name: Template over Ansible Inventory
      lineinfile:
        dest: /opt/workshop_assets/ansible_inventory
        regexp: "{{ hostvars[item]['ansible_internal_ip'] }}.*$"
        line: "{{ hostvars[item]['ansible_internal_ip'] }} {{ hostvars[item]['ansible_set_fqdn'] }} {{ hostvars[item]['ansible_set_hostname'] }}"
        state: present
        backup: yes
      tags: etc_hosts
      with_items: "{{ groups.internal_workshop_vsi }}"

    - name: Copy over environment SSH key
      copy:
        src: "{{ generation_directory }}/id_ssh_rsa"
        dest: /opt/workshop_assets/id_ssh_rsa
        mode: 0600

    - name: Copy over bootstraping script
      copy:
        src: internal_bootstrap.sh
        dest: /opt/workshop_assets/internal_bootstrap.sh
        mode: 0755

    - name: Template over bootstraping playbook
      template:
        src: internal_bootstrap.yml.j2
        dest: /opt/workshop_assets/internal_bootstrap.yml

    - name: Execute bootstrapping script
      command: /opt/workshop_assets/internal_bootstrap.sh